%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 115 575 676
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, 4 October 2020 2:18:09 PM AEDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
495 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
495.000 0 l
495.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
5 5 495 500 rc
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] concat
0 0 485 472 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
0.470588 0 0.0549020 RG
61.0000 -3.00000 422.993 478.000 rc
newpath
64.5000 237.500 m
66.5000 237.500 l
68.5000 237.500 l
70.5000 237.500 l
72.5000 237.500 l
75.5000 237.500 l
77.5000 237.500 l
79.5000 237.500 l
81.5000 237.500 l
83.5000 237.500 l
85.5000 237.500 l
87.5000 237.500 l
89.5000 237.500 l
91.5000 237.500 l
93.5000 237.500 l
95.5000 237.500 l
97.5000 237.500 l
99.5000 237.500 l
101.500 237.500 l
103.500 237.500 l
105.500 237.500 l
107.500 237.500 l
109.500 237.500 l
111.500 237.500 l
113.500 237.500 l
115.500 237.500 l
117.500 237.500 l
120.500 237.500 l
122.500 237.500 l
124.500 237.500 l
126.500 237.500 l
128.500 237.500 l
130.500 237.500 l
132.500 237.500 l
134.500 237.500 l
136.500 237.500 l
138.500 237.500 l
140.500 237.500 l
142.500 237.500 l
144.500 237.500 l
146.500 237.500 l
148.500 237.500 l
150.500 237.500 l
152.500 237.500 l
154.500 237.500 l
156.500 237.500 l
158.500 237.500 l
160.500 237.500 l
162.500 237.500 l
164.500 237.500 l
166.500 237.500 l
168.500 237.500 l
170.500 237.500 l
173.500 237.500 l
175.500 237.500 l
177.500 237.500 l
179.500 237.500 l
181.500 237.500 l
183.500 237.500 l
185.500 237.500 l
187.500 237.500 l
189.500 237.500 l
191.500 237.500 l
193.500 237.500 l
195.500 237.500 l
197.500 237.500 l
199.500 237.500 l
201.500 237.500 l
203.500 237.500 l
205.500 237.500 l
207.500 237.500 l
209.500 237.500 l
211.500 237.500 l
213.500 237.500 l
215.500 237.500 l
217.500 237.500 l
219.500 237.500 l
221.500 237.500 l
223.500 237.500 l
225.500 237.500 l
227.500 237.500 l
229.500 237.500 l
231.500 237.500 l
233.500 237.500 l
235.500 237.500 l
237.500 237.500 l
239.500 237.500 l
241.500 237.500 l
243.500 237.500 l
245.500 237.500 l
247.500 237.500 l
249.500 237.500 l
251.500 237.500 l
253.500 237.500 l
255.500 237.500 l
257.500 237.500 l
259.500 237.500 l
261.500 237.500 l
263.500 237.500 l
265.500 237.500 l
267.500 237.500 l
269.500 237.500 l
271.500 237.500 l
273.500 237.500 l
275.500 237.500 l
277.500 237.500 l
279.500 237.500 l
281.500 237.500 l
283.500 237.500 l
285.500 237.500 l
287.500 237.500 l
289.500 237.500 l
291.500 237.500 l
293.500 237.500 l
295.500 237.500 l
297.500 237.500 l
299.500 237.500 l
301.500 237.500 l
303.500 237.500 l
305.500 237.500 l
307.500 237.500 l
309.500 237.500 l
311.500 237.500 l
313.500 237.500 l
315.500 237.500 l
317.500 237.500 l
319.500 237.500 l
321.500 237.500 l
323.500 237.500 l
325.500 237.500 l
327.500 237.500 l
329.500 237.500 l
331.500 237.500 l
333.500 237.500 l
335.500 237.500 l
337.500 237.500 l
339.500 237.500 l
341.500 237.500 l
343.500 237.500 l
345.500 237.500 l
347.500 237.500 l
349.500 237.500 l
351.500 237.500 l
353.500 237.500 l
355.500 237.500 l
357.500 237.500 l
359.500 237.500 l
361.500 237.500 l
363.500 237.500 l
365.500 237.500 l
367.500 237.500 l
369.500 237.500 l
371.500 237.500 l
373.500 237.500 l
375.500 237.500 l
377.500 237.500 l
379.500 237.500 l
381.500 237.500 l
383.500 237.500 l
385.500 237.500 l
387.500 237.500 l
389.500 237.500 l
391.500 237.500 l
393.500 237.500 l
395.500 237.500 l
397.500 237.500 l
399.500 237.500 l
401.500 237.500 l
403.500 237.500 l
405.500 237.500 l
407.500 237.500 l
409.500 237.500 l
411.500 237.500 l
413.500 237.500 l
415.500 237.500 l
417.500 237.500 l
419.500 237.500 l
422.500 237.500 l
424.500 237.500 l
426.500 237.500 l
428.500 237.500 l
430.500 237.500 l
432.500 237.500 l
434.500 237.500 l
436.500 237.500 l
438.500 237.500 l
440.500 237.500 l
442.500 237.500 l
444.500 237.500 l
446.500 237.500 l
448.500 237.500 l
450.500 237.500 l
452.500 237.500 l
454.500 237.500 l
456.500 237.500 l
458.500 237.500 l
460.500 237.500 l
462.500 237.500 l
464.500 237.500 l
467.500 237.500 l
470.500 237.500 l
472.500 237.500 l
474.500 237.500 l
476.500 237.500 l
478.500 237.500 l
480.500 237.500 l
S
cliprestore
newpath
0 0 m
0 472.000 l
485.000 472.000 l
485.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
64.0000 236.500 m
479.993 236.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
263 261 17 15 rc
newpath
271.250 267.250 m
271.458 267.468 271.614 267.692 271.718 267.921  c
271.802 268.067 271.927 268.463 272.093 269.109  c
272.656 268.281 l
272.802 268.072 272.981 267.877 273.195 267.695  c
273.408 267.513 273.593 267.385 273.750 267.312  c
273.854 267.270 273.968 267.250 274.093 267.250  c
274.270 267.250 274.414 267.299 274.523 267.398  c
274.632 267.497 274.687 267.614 274.687 267.750  c
274.687 267.916 274.656 268.031 274.593 268.093  c
274.479 268.197 274.343 268.250 274.187 268.250  c
274.093 268.250 274.000 268.229 273.906 268.187  c
273.708 268.125 273.572 268.093 273.500 268.093  c
273.395 268.093 273.276 268.151 273.140 268.265  c
272.880 268.484 272.567 268.911 272.203 269.546  c
272.718 271.718 l
272.802 272.052 272.869 272.252 272.921 272.320  c
272.974 272.388 273.031 272.421 273.093 272.421  c
273.177 272.421 273.281 272.375 273.406 272.281  c
273.635 272.083 273.833 271.828 274.000 271.515  c
274.218 271.625 l
273.947 272.125 273.609 272.541 273.203 272.875  c
272.974 273.062 272.776 273.156 272.609 273.156  c
272.369 273.156 272.182 273.020 272.046 272.750  c
271.953 272.583 271.770 271.875 271.500 270.625  c
270.833 271.770 270.302 272.505 269.906 272.828  c
269.645 273.046 269.395 273.156 269.156 273.156  c
268.989 273.156 268.833 273.093 268.687 272.968  c
268.593 272.875 268.546 272.750 268.546 272.593  c
268.546 272.458 268.593 272.343 268.687 272.250  c
268.781 272.156 268.895 272.109 269.031 272.109  c
269.166 272.109 269.307 272.177 269.453 272.312  c
269.567 272.406 269.656 272.453 269.718 272.453  c
269.760 272.453 269.822 272.421 269.906 272.359  c
270.104 272.192 270.375 271.843 270.718 271.312  c
271.062 270.781 271.286 270.395 271.390 270.156  c
271.130 269.125 270.989 268.583 270.968 268.531  c
270.875 268.250 270.750 268.052 270.593 267.937  c
270.437 267.822 270.203 267.765 269.890 267.765  c
269.796 267.765 269.687 267.770 269.562 267.781  c
269.562 267.546 l
271.250 267.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 472.000 l
485.000 472.000 l
485.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 236.500 m
64.0000 241.475 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
147.198 236.500 m
147.198 241.475 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 157.000 280.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -157.000 -280.000 ] concat
newpath
147.578 280.765 m
147.578 279.557 147.760 278.515 148.125 277.640  c
148.489 276.765 148.974 276.114 149.578 275.687  c
150.046 275.354 150.531 275.187 151.031 275.187  c
151.843 275.187 152.572 275.599 153.218 276.421  c
154.031 277.453 154.437 278.843 154.437 280.593  c
154.437 281.822 154.260 282.867 153.906 283.726  c
153.552 284.585 153.099 285.210 152.546 285.601  c
151.994 285.992 151.463 286.187 150.953 286.187  c
149.942 286.187 149.104 285.588 148.437 284.390  c
147.864 283.390 147.578 282.182 147.578 280.765  c
h
149.109 280.953 m
149.109 282.411 149.291 283.604 149.656 284.531  c
149.947 285.302 150.390 285.687 150.984 285.687  c
151.265 285.687 151.557 285.562 151.859 285.312  c
152.161 285.062 152.390 284.640 152.546 284.046  c
152.786 283.151 152.906 281.885 152.906 280.250  c
152.906 279.041 152.781 278.036 152.531 277.234  c
152.343 276.630 152.099 276.203 151.796 275.953  c
151.588 275.786 151.333 275.703 151.031 275.703  c
150.677 275.703 150.359 275.859 150.078 276.171  c
149.703 276.609 149.447 277.291 149.312 278.218  c
149.177 279.145 149.109 280.057 149.109 280.953  c
h
157.000 284.484 m
157.250 284.484 157.458 284.567 157.625 284.734  c
157.791 284.901 157.875 285.104 157.875 285.343  c
157.875 285.583 157.789 285.789 157.617 285.960  c
157.445 286.132 157.239 286.218 157.000 286.218  c
156.760 286.218 156.557 286.132 156.390 285.960  c
156.224 285.789 156.140 285.583 156.140 285.343  c
156.140 285.104 156.224 284.901 156.390 284.734  c
156.557 284.567 156.760 284.484 157.000 284.484  c
h
166.343 283.953 m
165.593 286.000 l
159.343 286.000 l
159.343 285.703 l
161.187 284.026 162.484 282.656 163.234 281.593  c
163.984 280.531 164.359 279.562 164.359 278.687  c
164.359 278.010 164.153 277.455 163.742 277.023  c
163.330 276.591 162.838 276.375 162.265 276.375  c
161.744 276.375 161.276 276.528 160.859 276.835  c
160.442 277.143 160.135 277.588 159.937 278.171  c
159.656 278.171 l
159.781 277.213 160.114 276.476 160.656 275.960  c
161.197 275.445 161.869 275.187 162.671 275.187  c
163.536 275.187 164.255 275.463 164.828 276.015  c
165.401 276.567 165.687 277.218 165.687 277.968  c
165.687 278.500 165.562 279.036 165.312 279.578  c
164.927 280.421 164.302 281.312 163.437 282.250  c
162.145 283.666 161.338 284.520 161.015 284.812  c
163.781 284.812 l
164.343 284.812 164.737 284.791 164.960 284.750  c
165.184 284.708 165.388 284.625 165.570 284.500  c
165.752 284.375 165.911 284.192 166.046 283.953  c
166.343 283.953 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
230.397 236.500 m
230.397 241.475 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 240.000 280.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -240.000 -280.000 ] concat
newpath
230.578 280.765 m
230.578 279.557 230.760 278.515 231.125 277.640  c
231.489 276.765 231.974 276.114 232.578 275.687  c
233.046 275.354 233.531 275.187 234.031 275.187  c
234.843 275.187 235.572 275.599 236.218 276.421  c
237.031 277.453 237.437 278.843 237.437 280.593  c
237.437 281.822 237.260 282.867 236.906 283.726  c
236.552 284.585 236.099 285.210 235.546 285.601  c
234.994 285.992 234.463 286.187 233.953 286.187  c
232.942 286.187 232.104 285.588 231.437 284.390  c
230.864 283.390 230.578 282.182 230.578 280.765  c
h
232.109 280.953 m
232.109 282.411 232.291 283.604 232.656 284.531  c
232.947 285.302 233.390 285.687 233.984 285.687  c
234.265 285.687 234.557 285.562 234.859 285.312  c
235.161 285.062 235.390 284.640 235.546 284.046  c
235.786 283.151 235.906 281.885 235.906 280.250  c
235.906 279.041 235.781 278.036 235.531 277.234  c
235.343 276.630 235.099 276.203 234.796 275.953  c
234.588 275.786 234.333 275.703 234.031 275.703  c
233.677 275.703 233.359 275.859 233.078 276.171  c
232.703 276.609 232.447 277.291 232.312 278.218  c
232.177 279.145 232.109 280.057 232.109 280.953  c
h
240.000 284.484 m
240.250 284.484 240.458 284.567 240.625 284.734  c
240.791 284.901 240.875 285.104 240.875 285.343  c
240.875 285.583 240.789 285.789 240.617 285.960  c
240.445 286.132 240.239 286.218 240.000 286.218  c
239.760 286.218 239.557 286.132 239.390 285.960  c
239.224 285.789 239.140 285.583 239.140 285.343  c
239.140 285.104 239.224 284.901 239.390 284.734  c
239.557 284.567 239.760 284.484 240.000 284.484  c
h
249.453 282.093 m
249.453 283.203 l
248.031 283.203 l
248.031 286.000 l
246.734 286.000 l
246.734 283.203 l
242.250 283.203 l
242.250 282.203 l
247.171 275.187 l
248.031 275.187 l
248.031 282.093 l
249.453 282.093 l
h
246.734 282.093 m
246.734 276.828 l
243.015 282.093 l
246.734 282.093 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
313.596 236.500 m
313.596 241.475 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 323.000 280.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -323.000 -280.000 ] concat
newpath
313.578 280.765 m
313.578 279.557 313.760 278.515 314.125 277.640  c
314.489 276.765 314.974 276.114 315.578 275.687  c
316.046 275.354 316.531 275.187 317.031 275.187  c
317.843 275.187 318.572 275.599 319.218 276.421  c
320.031 277.453 320.437 278.843 320.437 280.593  c
320.437 281.822 320.260 282.867 319.906 283.726  c
319.552 284.585 319.099 285.210 318.546 285.601  c
317.994 285.992 317.463 286.187 316.953 286.187  c
315.942 286.187 315.104 285.588 314.437 284.390  c
313.864 283.390 313.578 282.182 313.578 280.765  c
h
315.109 280.953 m
315.109 282.411 315.291 283.604 315.656 284.531  c
315.947 285.302 316.390 285.687 316.984 285.687  c
317.265 285.687 317.557 285.562 317.859 285.312  c
318.161 285.062 318.390 284.640 318.546 284.046  c
318.786 283.151 318.906 281.885 318.906 280.250  c
318.906 279.041 318.781 278.036 318.531 277.234  c
318.343 276.630 318.099 276.203 317.796 275.953  c
317.588 275.786 317.333 275.703 317.031 275.703  c
316.677 275.703 316.359 275.859 316.078 276.171  c
315.703 276.609 315.447 277.291 315.312 278.218  c
315.177 279.145 315.109 280.057 315.109 280.953  c
h
323.000 284.484 m
323.250 284.484 323.458 284.567 323.625 284.734  c
323.791 284.901 323.875 285.104 323.875 285.343  c
323.875 285.583 323.789 285.789 323.617 285.960  c
323.445 286.132 323.239 286.218 323.000 286.218  c
322.760 286.218 322.557 286.132 322.390 285.960  c
322.224 285.789 322.140 285.583 322.140 285.343  c
322.140 285.104 322.224 284.901 322.390 284.734  c
322.557 284.567 322.760 284.484 323.000 284.484  c
h
332.171 275.187 m
332.171 275.468 l
331.484 275.541 330.924 275.679 330.492 275.882  c
330.059 276.085 329.630 276.398 329.203 276.820  c
328.776 277.242 328.424 277.713 328.148 278.234  c
327.872 278.755 327.640 279.369 327.453 280.078  c
328.203 279.567 328.953 279.312 329.703 279.312  c
330.432 279.312 331.062 279.604 331.593 280.187  c
332.125 280.770 332.390 281.520 332.390 282.437  c
332.390 283.322 332.119 284.130 331.578 284.859  c
330.932 285.744 330.078 286.187 329.015 286.187  c
328.296 286.187 327.682 285.947 327.171 285.468  c
326.182 284.531 325.687 283.322 325.687 281.843  c
325.687 280.895 325.877 279.994 326.257 279.140  c
326.638 278.286 327.182 277.528 327.890 276.867  c
328.599 276.205 329.276 275.760 329.921 275.531  c
330.567 275.302 331.166 275.187 331.718 275.187  c
332.171 275.187 l
h
327.312 280.656 m
327.218 281.354 327.171 281.921 327.171 282.359  c
327.171 282.859 327.265 283.401 327.453 283.984  c
327.640 284.567 327.916 285.031 328.281 285.375  c
328.541 285.625 328.864 285.750 329.250 285.750  c
329.697 285.750 330.101 285.536 330.460 285.109  c
330.820 284.682 331.000 284.072 331.000 283.281  c
331.000 282.385 330.822 281.612 330.468 280.960  c
330.114 280.309 329.609 279.984 328.953 279.984  c
328.755 279.984 328.544 280.026 328.320 280.109  c
328.096 280.192 327.760 280.375 327.312 280.656  c
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
396.795 236.500 m
396.795 241.475 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 406.000 280.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -406.000 -280.000 ] concat
newpath
396.578 280.765 m
396.578 279.557 396.760 278.515 397.125 277.640  c
397.489 276.765 397.974 276.114 398.578 275.687  c
399.046 275.354 399.531 275.187 400.031 275.187  c
400.843 275.187 401.572 275.599 402.218 276.421  c
403.031 277.453 403.437 278.843 403.437 280.593  c
403.437 281.822 403.260 282.867 402.906 283.726  c
402.552 284.585 402.099 285.210 401.546 285.601  c
400.994 285.992 400.463 286.187 399.953 286.187  c
398.942 286.187 398.104 285.588 397.437 284.390  c
396.864 283.390 396.578 282.182 396.578 280.765  c
h
398.109 280.953 m
398.109 282.411 398.291 283.604 398.656 284.531  c
398.947 285.302 399.390 285.687 399.984 285.687  c
400.265 285.687 400.557 285.562 400.859 285.312  c
401.161 285.062 401.390 284.640 401.546 284.046  c
401.786 283.151 401.906 281.885 401.906 280.250  c
401.906 279.041 401.781 278.036 401.531 277.234  c
401.343 276.630 401.099 276.203 400.796 275.953  c
400.588 275.786 400.333 275.703 400.031 275.703  c
399.677 275.703 399.359 275.859 399.078 276.171  c
398.703 276.609 398.447 277.291 398.312 278.218  c
398.177 279.145 398.109 280.057 398.109 280.953  c
h
406.000 284.484 m
406.250 284.484 406.458 284.567 406.625 284.734  c
406.791 284.901 406.875 285.104 406.875 285.343  c
406.875 285.583 406.789 285.789 406.617 285.960  c
406.445 286.132 406.239 286.218 406.000 286.218  c
405.760 286.218 405.557 286.132 405.390 285.960  c
405.224 285.789 405.140 285.583 405.140 285.343  c
405.140 285.104 405.224 284.901 405.390 284.734  c
405.557 284.567 405.760 284.484 406.000 284.484  c
h
411.078 280.656 m
410.234 279.968 409.692 279.416 409.453 279.000  c
409.213 278.583 409.093 278.151 409.093 277.703  c
409.093 277.015 409.359 276.424 409.890 275.929  c
410.421 275.434 411.125 275.187 412.000 275.187  c
412.854 275.187 413.541 275.419 414.062 275.882  c
414.583 276.346 414.843 276.875 414.843 277.468  c
414.843 277.864 414.703 278.268 414.421 278.679  c
414.140 279.091 413.557 279.572 412.671 280.125  c
413.588 280.833 414.192 281.390 414.484 281.796  c
414.880 282.328 415.078 282.890 415.078 283.484  c
415.078 284.224 414.794 284.859 414.226 285.390  c
413.658 285.921 412.916 286.187 412.000 286.187  c
410.989 286.187 410.203 285.869 409.640 285.234  c
409.192 284.734 408.968 284.182 408.968 283.578  c
408.968 283.109 409.127 282.645 409.445 282.187  c
409.763 281.729 410.307 281.218 411.078 280.656  c
h
412.296 279.828 m
412.921 279.265 413.317 278.820 413.484 278.492  c
413.651 278.164 413.734 277.796 413.734 277.390  c
413.734 276.838 413.580 276.408 413.273 276.101  c
412.966 275.794 412.546 275.640 412.015 275.640  c
411.484 275.640 411.052 275.794 410.718 276.101  c
410.385 276.408 410.218 276.765 410.218 277.171  c
410.218 277.442 410.289 277.713 410.429 277.984  c
410.570 278.255 410.765 278.515 411.015 278.765  c
412.296 279.828 l
h
411.437 280.953 m
411.010 281.317 410.692 281.716 410.484 282.148  c
410.276 282.580 410.171 283.046 410.171 283.546  c
410.171 284.213 410.354 284.750 410.718 285.156  c
411.083 285.562 411.552 285.765 412.125 285.765  c
412.687 285.765 413.138 285.606 413.476 285.289  c
413.815 284.971 413.984 284.583 413.984 284.125  c
413.984 283.750 413.885 283.416 413.687 283.125  c
413.312 282.572 412.562 281.849 411.437 280.953  c
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
479.993 236.500 m
479.993 241.475 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 489.000 280.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -489.000 -280.000 ] concat
newpath
486.875 276.437 m
489.453 275.187 l
489.718 275.187 l
489.718 284.125 l
489.718 284.718 489.742 285.088 489.789 285.234  c
489.835 285.380 489.937 285.492 490.093 285.570  c
490.250 285.648 490.567 285.692 491.046 285.703  c
491.046 286.000 l
487.062 286.000 l
487.062 285.703 l
487.562 285.692 487.885 285.651 488.031 285.578  c
488.177 285.505 488.278 285.403 488.335 285.273  c
488.393 285.143 488.421 284.760 488.421 284.125  c
488.421 278.406 l
488.421 277.635 488.395 277.140 488.343 276.921  c
488.312 276.755 488.247 276.632 488.148 276.554  c
488.049 276.476 487.932 276.437 487.796 276.437  c
487.609 276.437 487.343 276.520 487.000 276.687  c
486.875 276.437 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
105.599 236.500 m
105.599 238.987 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 115.000 271.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -115.000 -271.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
188.798 236.500 m
188.798 238.987 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 198.000 271.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -198.000 -271.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
271.996 236.500 m
271.996 238.987 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 281.000 271.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -281.000 -271.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
355.195 236.500 m
355.195 238.987 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 365.000 271.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -365.000 -271.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
438.394 236.500 m
438.394 238.987 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 448.000 271.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -448.000 -271.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
64.0000 472.000 m
64.0000 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 111 19 15 rc
newpath
11.0781 117.250 m
11.2239 117.500 11.3229 117.731 11.3750 117.945  c
11.4270 118.158 11.4843 118.578 11.5468 119.203  c
11.8125 122.328 l
12.0729 122.026 12.4427 121.541 12.9218 120.875  c
13.1510 120.552 13.4375 120.114 13.7812 119.562  c
13.9895 119.229 14.1197 118.994 14.1718 118.859  c
14.1927 118.786 14.2031 118.713 14.2031 118.640  c
14.2031 118.599 14.1875 118.562 14.1562 118.531  c
14.1250 118.500 14.0468 118.463 13.9218 118.421  c
13.7968 118.380 13.6953 118.307 13.6171 118.203  c
13.5390 118.099 13.5000 117.974 13.5000 117.828  c
13.5000 117.661 13.5494 117.523 13.6484 117.414  c
13.7474 117.304 13.8750 117.250 14.0312 117.250  c
14.2187 117.250 14.3776 117.328 14.5078 117.484  c
14.6380 117.640 14.7031 117.854 14.7031 118.125  c
14.7031 118.458 14.5885 118.841 14.3593 119.273  c
14.1302 119.705 13.6901 120.364 13.0390 121.250  c
12.3880 122.135 11.5989 123.104 10.6718 124.156  c
10.0364 124.875 9.56250 125.330 9.25000 125.523  c
8.93750 125.716 8.67187 125.812 8.45312 125.812  c
8.31770 125.812 8.20052 125.760 8.10156 125.656  c
8.00260 125.552 7.95312 125.437 7.95312 125.312  c
7.95312 125.145 8.02343 124.994 8.16406 124.859  c
8.30468 124.724 8.45312 124.656 8.60937 124.656  c
8.69270 124.656 8.76562 124.677 8.82812 124.718  c
8.85937 124.739 8.89583 124.799 8.93750 124.898  c
8.97916 124.997 9.01562 125.062 9.04687 125.093  c
9.06770 125.114 9.09375 125.125 9.12500 125.125  c
9.14583 125.125 9.18750 125.104 9.25000 125.062  c
9.48958 124.916 9.76041 124.687 10.0625 124.375  c
10.4687 123.958 10.7708 123.619 10.9687 123.359  c
10.6093 119.343 l
10.5572 118.677 10.4713 118.270 10.3515 118.125  c
10.2317 117.979 10.0312 117.906 9.75000 117.906  c
9.65625 117.906 9.49479 117.921 9.26562 117.953  c
9.21875 117.718 l
11.0781 117.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 472.000 l
485.000 472.000 l
485.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 424.900 m
59.0250 424.900 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 49.0000 452.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -49.0000 -452.000 ] concat
q
34 445 9 16 rc
newpath
47.2812 453.609 m
36.7187 453.609 l
36.7187 452.781 l
47.2812 452.781 l
47.2812 453.609 l
h
f
Q
newpath
45.5781 452.765 m
45.5781 451.557 45.7604 450.515 46.1250 449.640  c
46.4895 448.765 46.9739 448.114 47.5781 447.687  c
48.0468 447.354 48.5312 447.187 49.0312 447.187  c
49.8437 447.187 50.5729 447.599 51.2187 448.421  c
52.0312 449.453 52.4375 450.843 52.4375 452.593  c
52.4375 453.822 52.2604 454.867 51.9062 455.726  c
51.5520 456.585 51.0989 457.210 50.5468 457.601  c
49.9947 457.992 49.4635 458.187 48.9531 458.187  c
47.9427 458.187 47.1041 457.588 46.4375 456.390  c
45.8645 455.390 45.5781 454.182 45.5781 452.765  c
h
47.1093 452.953 m
47.1093 454.411 47.2916 455.604 47.6562 456.531  c
47.9479 457.302 48.3906 457.687 48.9843 457.687  c
49.2656 457.687 49.5572 457.562 49.8593 457.312  c
50.1614 457.062 50.3906 456.640 50.5468 456.046  c
50.7864 455.151 50.9062 453.885 50.9062 452.250  c
50.9062 451.041 50.7812 450.036 50.5312 449.234  c
50.3437 448.630 50.0989 448.203 49.7968 447.953  c
49.5885 447.786 49.3333 447.703 49.0312 447.703  c
48.6770 447.703 48.3593 447.859 48.0781 448.171  c
47.7031 448.609 47.4479 449.291 47.3125 450.218  c
47.1770 451.145 47.1093 452.057 47.1093 452.953  c
h
55.0000 456.484 m
55.2500 456.484 55.4583 456.567 55.6250 456.734  c
55.7916 456.901 55.8750 457.104 55.8750 457.343  c
55.8750 457.583 55.7890 457.789 55.6171 457.960  c
55.4453 458.132 55.2395 458.218 55.0000 458.218  c
54.7604 458.218 54.5572 458.132 54.3906 457.960  c
54.2239 457.789 54.1406 457.583 54.1406 457.343  c
54.1406 457.104 54.2239 456.901 54.3906 456.734  c
54.5572 456.567 54.7604 456.484 55.0000 456.484  c
h
64.3437 455.953 m
63.5937 458.000 l
57.3437 458.000 l
57.3437 457.703 l
59.1875 456.026 60.4843 454.656 61.2343 453.593  c
61.9843 452.531 62.3593 451.562 62.3593 450.687  c
62.3593 450.010 62.1536 449.455 61.7421 449.023  c
61.3307 448.591 60.8385 448.375 60.2656 448.375  c
59.7447 448.375 59.2760 448.528 58.8593 448.835  c
58.4427 449.143 58.1354 449.588 57.9375 450.171  c
57.6562 450.171 l
57.7812 449.213 58.1145 448.476 58.6562 447.960  c
59.1979 447.445 59.8697 447.187 60.6718 447.187  c
61.5364 447.187 62.2552 447.463 62.8281 448.015  c
63.4010 448.567 63.6875 449.218 63.6875 449.968  c
63.6875 450.500 63.5625 451.036 63.3125 451.578  c
62.9270 452.421 62.3020 453.312 61.4375 454.250  c
60.1458 455.666 59.3385 456.520 59.0156 456.812  c
61.7812 456.812 l
62.3437 456.812 62.7369 456.791 62.9609 456.750  c
63.1849 456.708 63.3880 456.625 63.5703 456.500  c
63.7526 456.375 63.9114 456.192 64.0468 455.953  c
64.3437 455.953 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 330.700 m
59.0250 330.700 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 49.0000 358.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -49.0000 -358.000 ] concat
q
34 351 9 16 rc
newpath
47.2812 359.609 m
36.7187 359.609 l
36.7187 358.781 l
47.2812 358.781 l
47.2812 359.609 l
h
f
Q
newpath
45.5781 358.765 m
45.5781 357.557 45.7604 356.515 46.1250 355.640  c
46.4895 354.765 46.9739 354.114 47.5781 353.687  c
48.0468 353.354 48.5312 353.187 49.0312 353.187  c
49.8437 353.187 50.5729 353.599 51.2187 354.421  c
52.0312 355.453 52.4375 356.843 52.4375 358.593  c
52.4375 359.822 52.2604 360.867 51.9062 361.726  c
51.5520 362.585 51.0989 363.210 50.5468 363.601  c
49.9947 363.992 49.4635 364.187 48.9531 364.187  c
47.9427 364.187 47.1041 363.588 46.4375 362.390  c
45.8645 361.390 45.5781 360.182 45.5781 358.765  c
h
47.1093 358.953 m
47.1093 360.411 47.2916 361.604 47.6562 362.531  c
47.9479 363.302 48.3906 363.687 48.9843 363.687  c
49.2656 363.687 49.5572 363.562 49.8593 363.312  c
50.1614 363.062 50.3906 362.640 50.5468 362.046  c
50.7864 361.151 50.9062 359.885 50.9062 358.250  c
50.9062 357.041 50.7812 356.036 50.5312 355.234  c
50.3437 354.630 50.0989 354.203 49.7968 353.953  c
49.5885 353.786 49.3333 353.703 49.0312 353.703  c
48.6770 353.703 48.3593 353.859 48.0781 354.171  c
47.7031 354.609 47.4479 355.291 47.3125 356.218  c
47.1770 357.145 47.1093 358.057 47.1093 358.953  c
h
55.0000 362.484 m
55.2500 362.484 55.4583 362.567 55.6250 362.734  c
55.7916 362.901 55.8750 363.104 55.8750 363.343  c
55.8750 363.583 55.7890 363.789 55.6171 363.960  c
55.4453 364.132 55.2395 364.218 55.0000 364.218  c
54.7604 364.218 54.5572 364.132 54.3906 363.960  c
54.2239 363.789 54.1406 363.583 54.1406 363.343  c
54.1406 363.104 54.2239 362.901 54.3906 362.734  c
54.5572 362.567 54.7604 362.484 55.0000 362.484  c
h
58.8750 354.437 m
61.4531 353.187 l
61.7187 353.187 l
61.7187 362.125 l
61.7187 362.718 61.7421 363.088 61.7890 363.234  c
61.8359 363.380 61.9375 363.492 62.0937 363.570  c
62.2500 363.648 62.5677 363.692 63.0468 363.703  c
63.0468 364.000 l
59.0625 364.000 l
59.0625 363.703 l
59.5625 363.692 59.8854 363.651 60.0312 363.578  c
60.1770 363.505 60.2786 363.403 60.3359 363.273  c
60.3932 363.143 60.4218 362.760 60.4218 362.125  c
60.4218 356.406 l
60.4218 355.635 60.3958 355.140 60.3437 354.921  c
60.3125 354.755 60.2474 354.632 60.1484 354.554  c
60.0494 354.476 59.9322 354.437 59.7968 354.437  c
59.6093 354.437 59.3437 354.520 59.0000 354.687  c
58.8750 354.437 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 236.500 m
59.0250 236.500 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 59.0000 264.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -59.0000 -264.000 ] concat
newpath
56.5781 264.765 m
56.5781 263.557 56.7604 262.515 57.1250 261.640  c
57.4895 260.765 57.9739 260.114 58.5781 259.687  c
59.0468 259.354 59.5312 259.187 60.0312 259.187  c
60.8437 259.187 61.5729 259.599 62.2187 260.421  c
63.0312 261.453 63.4375 262.843 63.4375 264.593  c
63.4375 265.822 63.2604 266.867 62.9062 267.726  c
62.5520 268.585 62.0989 269.210 61.5468 269.601  c
60.9947 269.992 60.4635 270.187 59.9531 270.187  c
58.9427 270.187 58.1041 269.588 57.4375 268.390  c
56.8645 267.390 56.5781 266.182 56.5781 264.765  c
h
58.1093 264.953 m
58.1093 266.411 58.2916 267.604 58.6562 268.531  c
58.9479 269.302 59.3906 269.687 59.9843 269.687  c
60.2656 269.687 60.5572 269.562 60.8593 269.312  c
61.1614 269.062 61.3906 268.640 61.5468 268.046  c
61.7864 267.151 61.9062 265.885 61.9062 264.250  c
61.9062 263.041 61.7812 262.036 61.5312 261.234  c
61.3437 260.630 61.0989 260.203 60.7968 259.953  c
60.5885 259.786 60.3333 259.703 60.0312 259.703  c
59.6770 259.703 59.3593 259.859 59.0781 260.171  c
58.7031 260.609 58.4479 261.291 58.3125 262.218  c
58.1770 263.145 58.1093 264.057 58.1093 264.953  c
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 142.300 m
59.0250 142.300 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 54.0000 170.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -54.0000 -170.000 ] concat
newpath
45.5781 170.765 m
45.5781 169.557 45.7604 168.515 46.1250 167.640  c
46.4895 166.765 46.9739 166.114 47.5781 165.687  c
48.0468 165.354 48.5312 165.187 49.0312 165.187  c
49.8437 165.187 50.5729 165.599 51.2187 166.421  c
52.0312 167.453 52.4375 168.843 52.4375 170.593  c
52.4375 171.822 52.2604 172.867 51.9062 173.726  c
51.5520 174.585 51.0989 175.210 50.5468 175.601  c
49.9947 175.992 49.4635 176.187 48.9531 176.187  c
47.9427 176.187 47.1041 175.588 46.4375 174.390  c
45.8645 173.390 45.5781 172.182 45.5781 170.765  c
h
47.1093 170.953 m
47.1093 172.411 47.2916 173.604 47.6562 174.531  c
47.9479 175.302 48.3906 175.687 48.9843 175.687  c
49.2656 175.687 49.5572 175.562 49.8593 175.312  c
50.1614 175.062 50.3906 174.640 50.5468 174.046  c
50.7864 173.151 50.9062 171.885 50.9062 170.250  c
50.9062 169.041 50.7812 168.036 50.5312 167.234  c
50.3437 166.630 50.0989 166.203 49.7968 165.953  c
49.5885 165.786 49.3333 165.703 49.0312 165.703  c
48.6770 165.703 48.3593 165.859 48.0781 166.171  c
47.7031 166.609 47.4479 167.291 47.3125 168.218  c
47.1770 169.145 47.1093 170.057 47.1093 170.953  c
h
55.0000 174.484 m
55.2500 174.484 55.4583 174.567 55.6250 174.734  c
55.7916 174.901 55.8750 175.104 55.8750 175.343  c
55.8750 175.583 55.7890 175.789 55.6171 175.960  c
55.4453 176.132 55.2395 176.218 55.0000 176.218  c
54.7604 176.218 54.5572 176.132 54.3906 175.960  c
54.2239 175.789 54.1406 175.583 54.1406 175.343  c
54.1406 175.104 54.2239 174.901 54.3906 174.734  c
54.5572 174.567 54.7604 174.484 55.0000 174.484  c
h
58.8750 166.437 m
61.4531 165.187 l
61.7187 165.187 l
61.7187 174.125 l
61.7187 174.718 61.7421 175.088 61.7890 175.234  c
61.8359 175.380 61.9375 175.492 62.0937 175.570  c
62.2500 175.648 62.5677 175.692 63.0468 175.703  c
63.0468 176.000 l
59.0625 176.000 l
59.0625 175.703 l
59.5625 175.692 59.8854 175.651 60.0312 175.578  c
60.1770 175.505 60.2786 175.403 60.3359 175.273  c
60.3932 175.143 60.4218 174.760 60.4218 174.125  c
60.4218 168.406 l
60.4218 167.635 60.3958 167.140 60.3437 166.921  c
60.3125 166.755 60.2474 166.632 60.1484 166.554  c
60.0494 166.476 59.9322 166.437 59.7968 166.437  c
59.6093 166.437 59.3437 166.520 59.0000 166.687  c
58.8750 166.437 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 48.1000 m
59.0250 48.1000 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 54.0000 76.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -54.0000 -76.0000 ] concat
newpath
45.5781 76.7656 m
45.5781 75.5572 45.7604 74.5156 46.1250 73.6406  c
46.4895 72.7656 46.9739 72.1145 47.5781 71.6875  c
48.0468 71.3541 48.5312 71.1875 49.0312 71.1875  c
49.8437 71.1875 50.5729 71.5989 51.2187 72.4218  c
52.0312 73.4531 52.4375 74.8437 52.4375 76.5937  c
52.4375 77.8229 52.2604 78.8671 51.9062 79.7265  c
51.5520 80.5859 51.0989 81.2109 50.5468 81.6015  c
49.9947 81.9921 49.4635 82.1875 48.9531 82.1875  c
47.9427 82.1875 47.1041 81.5885 46.4375 80.3906  c
45.8645 79.3906 45.5781 78.1822 45.5781 76.7656  c
h
47.1093 76.9531 m
47.1093 78.4114 47.2916 79.6041 47.6562 80.5312  c
47.9479 81.3020 48.3906 81.6875 48.9843 81.6875  c
49.2656 81.6875 49.5572 81.5625 49.8593 81.3125  c
50.1614 81.0625 50.3906 80.6406 50.5468 80.0468  c
50.7864 79.1510 50.9062 77.8854 50.9062 76.2500  c
50.9062 75.0416 50.7812 74.0364 50.5312 73.2343  c
50.3437 72.6302 50.0989 72.2031 49.7968 71.9531  c
49.5885 71.7864 49.3333 71.7031 49.0312 71.7031  c
48.6770 71.7031 48.3593 71.8593 48.0781 72.1718  c
47.7031 72.6093 47.4479 73.2916 47.3125 74.2187  c
47.1770 75.1458 47.1093 76.0572 47.1093 76.9531  c
h
55.0000 80.4843 m
55.2500 80.4843 55.4583 80.5677 55.6250 80.7343  c
55.7916 80.9010 55.8750 81.1041 55.8750 81.3437  c
55.8750 81.5833 55.7890 81.7890 55.6171 81.9609  c
55.4453 82.1328 55.2395 82.2187 55.0000 82.2187  c
54.7604 82.2187 54.5572 82.1328 54.3906 81.9609  c
54.2239 81.7890 54.1406 81.5833 54.1406 81.3437  c
54.1406 81.1041 54.2239 80.9010 54.3906 80.7343  c
54.5572 80.5677 54.7604 80.4843 55.0000 80.4843  c
h
64.3437 79.9531 m
63.5937 82.0000 l
57.3437 82.0000 l
57.3437 81.7031 l
59.1875 80.0260 60.4843 78.6562 61.2343 77.5937  c
61.9843 76.5312 62.3593 75.5625 62.3593 74.6875  c
62.3593 74.0104 62.1536 73.4557 61.7421 73.0234  c
61.3307 72.5911 60.8385 72.3750 60.2656 72.3750  c
59.7447 72.3750 59.2760 72.5286 58.8593 72.8359  c
58.4427 73.1432 58.1354 73.5885 57.9375 74.1718  c
57.6562 74.1718 l
57.7812 73.2135 58.1145 72.4765 58.6562 71.9609  c
59.1979 71.4453 59.8697 71.1875 60.6718 71.1875  c
61.5364 71.1875 62.2552 71.4635 62.8281 72.0156  c
63.4010 72.5677 63.6875 73.2187 63.6875 73.9687  c
63.6875 74.5000 63.5625 75.0364 63.3125 75.5781  c
62.9270 76.4218 62.3020 77.3125 61.4375 78.2500  c
60.1458 79.6666 59.3385 80.5208 59.0156 80.8125  c
61.7812 80.8125 l
62.3437 80.8125 62.7369 80.7916 62.9609 80.7500  c
63.1849 80.7083 63.3880 80.6250 63.5703 80.5000  c
63.7526 80.3750 63.9114 80.1927 64.0468 79.9531  c
64.3437 79.9531 l
h
f
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 500.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -500.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 377.800 m
61.5125 377.800 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 405.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -405.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 283.600 m
61.5125 283.600 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 311.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -311.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 189.400 m
61.5125 189.400 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 217.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -217.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 95.1999 m
61.5125 95.1999 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 123.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -123.000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.0000 1.00000 m
61.5125 1.00000 l
S
[ 1.00000 0 0 1.00000 -10.0000 -28.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 29.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -10.0000 -29.0000 ] concat
[ 1.00000 0 0 1.00000 10.0000 28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
q
10 10 486 19 rc
[ 1.00000 0 0 1.00000 10.0000 10.0000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 487 18 rc
newpath
211.156 5.98437 m
210.546 8.10937 l
211.781 8.10937 l
211.640 8.60937 l
210.421 8.60937 l
209.078 13.2187 l
208.932 13.7083 208.859 14.0260 208.859 14.1718  c
208.859 14.2656 208.880 14.3359 208.921 14.3828  c
208.963 14.4296 209.015 14.4531 209.078 14.4531  c
209.203 14.4531 209.375 14.3593 209.593 14.1718  c
209.718 14.0677 209.994 13.7500 210.421 13.2187  c
210.687 13.4062 l
210.208 14.1041 209.755 14.5989 209.328 14.8906  c
209.036 15.0885 208.739 15.1875 208.437 15.1875  c
208.208 15.1875 208.020 15.1145 207.875 14.9687  c
207.729 14.8229 207.656 14.6406 207.656 14.4218  c
207.656 14.1406 207.739 13.7083 207.906 13.1250  c
209.218 8.60937 l
208.031 8.60937 l
208.109 8.29687 l
208.682 8.14062 209.158 7.90885 209.539 7.60156  c
209.919 7.29427 210.343 6.75520 210.812 5.98437  c
211.156 5.98437 l
h
f
newpath
215.296 8.09375 m
223.718 8.09375 l
223.718 8.73437 l
215.296 8.73437 l
215.296 8.09375 l
h
215.296 10.6406 m
223.718 10.6406 l
223.718 11.2812 l
215.296 11.2812 l
215.296 10.6406 l
h
f
newpath
228.578 9.76562 m
228.578 8.55729 228.760 7.51562 229.125 6.64062  c
229.489 5.76562 229.974 5.11458 230.578 4.68750  c
231.046 4.35416 231.531 4.18750 232.031 4.18750  c
232.843 4.18750 233.572 4.59895 234.218 5.42187  c
235.031 6.45312 235.437 7.84375 235.437 9.59375  c
235.437 10.8229 235.260 11.8671 234.906 12.7265  c
234.552 13.5859 234.099 14.2109 233.546 14.6015  c
232.994 14.9921 232.463 15.1875 231.953 15.1875  c
230.942 15.1875 230.104 14.5885 229.437 13.3906  c
228.864 12.3906 228.578 11.1822 228.578 9.76562  c
h
230.109 9.95312 m
230.109 11.4114 230.291 12.6041 230.656 13.5312  c
230.947 14.3020 231.390 14.6875 231.984 14.6875  c
232.265 14.6875 232.557 14.5625 232.859 14.3125  c
233.161 14.0625 233.390 13.6406 233.546 13.0468  c
233.786 12.1510 233.906 10.8854 233.906 9.25000  c
233.906 8.04166 233.781 7.03645 233.531 6.23437  c
233.343 5.63020 233.099 5.20312 232.796 4.95312  c
232.588 4.78645 232.333 4.70312 232.031 4.70312  c
231.677 4.70312 231.359 4.85937 231.078 5.17187  c
230.703 5.60937 230.447 6.29166 230.312 7.21875  c
230.177 8.14583 230.109 9.05729 230.109 9.95312  c
h
238.000 13.4843 m
238.250 13.4843 238.458 13.5677 238.625 13.7343  c
238.791 13.9010 238.875 14.1041 238.875 14.3437  c
238.875 14.5833 238.789 14.7890 238.617 14.9609  c
238.445 15.1328 238.239 15.2187 238.000 15.2187  c
237.760 15.2187 237.557 15.1328 237.390 14.9609  c
237.224 14.7890 237.140 14.5833 237.140 14.3437  c
237.140 14.1041 237.224 13.9010 237.390 13.7343  c
237.557 13.5677 237.760 13.4843 238.000 13.4843  c
h
246.953 4.40625 m
246.343 5.73437 l
243.156 5.73437 l
242.453 7.15625 l
243.838 7.35416 244.932 7.86458 245.734 8.68750  c
246.432 9.39583 246.781 10.2291 246.781 11.1875  c
246.781 11.7500 246.666 12.2682 246.437 12.7421  c
246.208 13.2161 245.921 13.6197 245.578 13.9531  c
245.234 14.2864 244.854 14.5520 244.437 14.7500  c
243.833 15.0416 243.218 15.1875 242.593 15.1875  c
241.958 15.1875 241.494 15.0781 241.203 14.8593  c
240.911 14.6406 240.765 14.4010 240.765 14.1406  c
240.765 13.9947 240.825 13.8671 240.945 13.7578  c
241.065 13.6484 241.218 13.5937 241.406 13.5937  c
241.541 13.5937 241.658 13.6145 241.757 13.6562  c
241.856 13.6979 242.031 13.8020 242.281 13.9687  c
242.666 14.2395 243.062 14.3750 243.468 14.3750  c
244.072 14.3750 244.606 14.1458 245.070 13.6875  c
245.533 13.2291 245.765 12.6666 245.765 12.0000  c
245.765 11.3645 245.559 10.7682 245.148 10.2109  c
244.737 9.65364 244.166 9.22395 243.437 8.92187  c
242.875 8.69270 242.104 8.55729 241.125 8.51562  c
243.156 4.40625 l
246.953 4.40625 l
h
248.578 9.76562 m
248.578 8.55729 248.760 7.51562 249.125 6.64062  c
249.489 5.76562 249.974 5.11458 250.578 4.68750  c
251.046 4.35416 251.531 4.18750 252.031 4.18750  c
252.843 4.18750 253.572 4.59895 254.218 5.42187  c
255.031 6.45312 255.437 7.84375 255.437 9.59375  c
255.437 10.8229 255.260 11.8671 254.906 12.7265  c
254.552 13.5859 254.099 14.2109 253.546 14.6015  c
252.994 14.9921 252.463 15.1875 251.953 15.1875  c
250.942 15.1875 250.104 14.5885 249.437 13.3906  c
248.864 12.3906 248.578 11.1822 248.578 9.76562  c
h
250.109 9.95312 m
250.109 11.4114 250.291 12.6041 250.656 13.5312  c
250.947 14.3020 251.390 14.6875 251.984 14.6875  c
252.265 14.6875 252.557 14.5625 252.859 14.3125  c
253.161 14.0625 253.390 13.6406 253.546 13.0468  c
253.786 12.1510 253.906 10.8854 253.906 9.25000  c
253.906 8.04166 253.781 7.03645 253.531 6.23437  c
253.343 5.63020 253.099 5.20312 252.796 4.95312  c
252.588 4.78645 252.333 4.70312 252.031 4.70312  c
251.677 4.70312 251.359 4.85937 251.078 5.17187  c
250.703 5.60937 250.447 6.29166 250.312 7.21875  c
250.177 8.14583 250.109 9.05729 250.109 9.95312  c
h
256.578 9.76562 m
256.578 8.55729 256.760 7.51562 257.125 6.64062  c
257.489 5.76562 257.974 5.11458 258.578 4.68750  c
259.046 4.35416 259.531 4.18750 260.031 4.18750  c
260.843 4.18750 261.572 4.59895 262.218 5.42187  c
263.031 6.45312 263.437 7.84375 263.437 9.59375  c
263.437 10.8229 263.260 11.8671 262.906 12.7265  c
262.552 13.5859 262.099 14.2109 261.546 14.6015  c
260.994 14.9921 260.463 15.1875 259.953 15.1875  c
258.942 15.1875 258.104 14.5885 257.437 13.3906  c
256.864 12.3906 256.578 11.1822 256.578 9.76562  c
h
258.109 9.95312 m
258.109 11.4114 258.291 12.6041 258.656 13.5312  c
258.947 14.3020 259.390 14.6875 259.984 14.6875  c
260.265 14.6875 260.557 14.5625 260.859 14.3125  c
261.161 14.0625 261.390 13.6406 261.546 13.0468  c
261.786 12.1510 261.906 10.8854 261.906 9.25000  c
261.906 8.04166 261.781 7.03645 261.531 6.23437  c
261.343 5.63020 261.099 5.20312 260.796 4.95312  c
260.588 4.78645 260.333 4.70312 260.031 4.70312  c
259.677 4.70312 259.359 4.85937 259.078 5.17187  c
258.703 5.60937 258.447 6.29166 258.312 7.21875  c
258.177 8.14583 258.109 9.05729 258.109 9.95312  c
h
264.578 9.76562 m
264.578 8.55729 264.760 7.51562 265.125 6.64062  c
265.489 5.76562 265.974 5.11458 266.578 4.68750  c
267.046 4.35416 267.531 4.18750 268.031 4.18750  c
268.843 4.18750 269.572 4.59895 270.218 5.42187  c
271.031 6.45312 271.437 7.84375 271.437 9.59375  c
271.437 10.8229 271.260 11.8671 270.906 12.7265  c
270.552 13.5859 270.099 14.2109 269.546 14.6015  c
268.994 14.9921 268.463 15.1875 267.953 15.1875  c
266.942 15.1875 266.104 14.5885 265.437 13.3906  c
264.864 12.3906 264.578 11.1822 264.578 9.76562  c
h
266.109 9.95312 m
266.109 11.4114 266.291 12.6041 266.656 13.5312  c
266.947 14.3020 267.390 14.6875 267.984 14.6875  c
268.265 14.6875 268.557 14.5625 268.859 14.3125  c
269.161 14.0625 269.390 13.6406 269.546 13.0468  c
269.786 12.1510 269.906 10.8854 269.906 9.25000  c
269.906 8.04166 269.781 7.03645 269.531 6.23437  c
269.343 5.63020 269.099 5.20312 268.796 4.95312  c
268.588 4.78645 268.333 4.70312 268.031 4.70312  c
267.677 4.70312 267.359 4.85937 267.078 5.17187  c
266.703 5.60937 266.447 6.29166 266.312 7.21875  c
266.177 8.14583 266.109 9.05729 266.109 9.95312  c
h
272.578 9.76562 m
272.578 8.55729 272.760 7.51562 273.125 6.64062  c
273.489 5.76562 273.974 5.11458 274.578 4.68750  c
275.046 4.35416 275.531 4.18750 276.031 4.18750  c
276.843 4.18750 277.572 4.59895 278.218 5.42187  c
279.031 6.45312 279.437 7.84375 279.437 9.59375  c
279.437 10.8229 279.260 11.8671 278.906 12.7265  c
278.552 13.5859 278.099 14.2109 277.546 14.6015  c
276.994 14.9921 276.463 15.1875 275.953 15.1875  c
274.942 15.1875 274.104 14.5885 273.437 13.3906  c
272.864 12.3906 272.578 11.1822 272.578 9.76562  c
h
274.109 9.95312 m
274.109 11.4114 274.291 12.6041 274.656 13.5312  c
274.947 14.3020 275.390 14.6875 275.984 14.6875  c
276.265 14.6875 276.557 14.5625 276.859 14.3125  c
277.161 14.0625 277.390 13.6406 277.546 13.0468  c
277.786 12.1510 277.906 10.8854 277.906 9.25000  c
277.906 8.04166 277.781 7.03645 277.531 6.23437  c
277.343 5.63020 277.099 5.20312 276.796 4.95312  c
276.588 4.78645 276.333 4.70312 276.031 4.70312  c
275.677 4.70312 275.359 4.85937 275.078 5.17187  c
274.703 5.60937 274.447 6.29166 274.312 7.21875  c
274.177 8.14583 274.109 9.05729 274.109 9.95312  c
h
f
Q
cliprestore
newpath
0 0 m
0 19.0000 l
486.000 19.0000 l
486.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 10.0000 10.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -10.0000 -10.0000 ] concat
cliprestore
Q
5 5 495 500 rc
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
